plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    compileSdk 32

    defaultConfig {
        applicationId "com.cmc.openweather"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "OPEN_WEATHER_API_KEY", "\"" + localProperties['OPEN_WEATHER_API_KEY'] + "\""
            buildConfigField "String", "OPEN_WEATHER_API_URL", "\"" + localProperties['OPEN_WEATHER_API_URL'] + "\""
        }

        release {
            buildConfigField "String", "OPEN_WEATHER_API_KEY", "\"" + localProperties['OPEN_WEATHER_API_KEY'] + "\""
            buildConfigField "String", "OPEN_WEATHER_API_URL", "\"" + localProperties['OPEN_WEATHER_API_URL'] + "\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Lifecycle
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Dagger Hilt
    def hilt_version = "2.44"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Networking
    def retrofit_version = "2.9.0"
    def okhttp_version = "4.7.2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Coroutine
    def coroutine_version = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    //Navigation
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Mockk
    def mockkVersion = "1.13.3"
    testImplementation "io.mockk:mockk:${mockkVersion}"


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test:runner:1.5.1'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}